{"version":3,"sources":["webpack:///./examples/update-option.js"],"names":["handleChange","value","console","log","Test","props","updateLabel","setState","label","count","updateOptions","options","state","width","map","opt","React","Component","ReactDOM","render","document","getElementById"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;AACA;AACA;;AAEA,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BC,UAAQC,GAAR,eAAwBF,KAAxB;AACD;;IAEKG,I;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA,yKACXA,KADW;;AAAA,UAUnBC,WAVmB,GAUL,YAAM;AAClB,YAAKC,QAAL,CAAc;AACZC,6BAAmB,MAAKC,KAAL;AADP,OAAd;AAGD,KAdkB;;AAAA,UAgBnBC,aAhBmB,GAgBH,UAACT,KAAD,EAAW;AACzB,UAAMU,UAAU,CACdV,KADc,EAEdA,QAAQA,KAFM,EAGdA,QAAQA,KAAR,GAAgBA,KAHF,CAAhB;AAKA,YAAKM,QAAL,CAAc;AACZI;AADY,OAAd;AAGD,KAzBkB;;AAGjB,UAAKC,KAAL,GAAa;AACXJ,aAAO,MADI;AAEXG,eAAS;AAFE,KAAb;AAIA,UAAKF,KAAL,GAAa,CAAb;AAPiB;AAQlB;;;;6BAmBQ;AACP,aACE;AAAA;AAAA;AAAA;AACU,aAAKG,KAAL,CAAWJ,KADrB;AAEE,+EAFF;AAGE;AAAC,2DAAD;AAAA;AACE,0BAAa,MADf;AAEE,6BAAgB,UAFlB;AAGE,mBAAO,EAAEK,OAAO,GAAT,EAHT;AAIE,sBAAUb;AAJZ;AAME;AAAC,6DAAD;AAAA,cAAQ,OAAM,MAAd;AAAsB,iBAAKY,KAAL,CAAWJ;AAAjC,WANF;AAOE;AAAC,6DAAD;AAAA,cAAQ,OAAM,OAAd;AAAA;AAAA;AAPF,SAHF;AAYE;AAAA;AAAA;AACE;AAAA;AAAA,cAAQ,SAAS,KAAKF,WAAtB;AAAA;AAAA;AADF,SAZF;AAeE,+EAfF;AAgBE;AAAC,2DAAD;AAAA;AACE,0BADF;AAEE,6BAAgB,UAFlB;AAGE,sBAAU,KAAKI;AAHjB;AAKG,eAAKE,KAAL,CAAWD,OAAX,CAAmBG,GAAnB,CAAuB,UAACC,GAAD,EAAS;AAC/B,mBAAO;AAAC,+DAAD;AAAA,gBAAQ,KAAKA,GAAb;AAAmBA;AAAnB,aAAP;AACD,WAFA;AALH,SAhBF;AAyBE;AAzBF,OADF;AA6BD;;;;EA1DgBC,6CAAKA,CAACC,S;;AA6DzBC,iDAAQA,CAACC,MAAT,CAAgB,4DAAC,IAAD,OAAhB,EAA0BC,SAASC,cAAT,CAAwB,iBAAxB,CAA1B,E","file":"examples/update-option.js","sourcesContent":["/* eslint no-console: 0 */\n\nimport React from 'react';\nimport Select, { Option } from 'rc-select';\nimport 'rc-select/assets/index.less';\nimport ReactDOM from 'react-dom';\n\nfunction handleChange(value) {\n  console.log(`selected ${value}`);\n}\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      label: 'Lucy',\n      options: [],\n    };\n    this.count = 0;\n  }\n\n  updateLabel = () => {\n    this.setState({\n      label: `newlabel ${this.count++}`,\n    });\n  }\n\n  updateOptions = (value) => {\n    const options = [\n      value,\n      value + value,\n      value + value + value,\n    ];\n    this.setState({\n      options,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        label: {this.state.label}\n        <hr />\n        <Select\n          defaultValue=\"lucy\"\n          optionLabelProp=\"children\"\n          style={{ width: 120 }}\n          onChange={handleChange}\n        >\n          <Option value=\"lucy\">{this.state.label}</Option>\n          <Option value=\"lucy2\">lucy2</Option>\n        </Select>\n        <p>\n          <button onClick={this.updateLabel}>upadte option label</button>\n        </p>\n        <hr/>\n        <Select\n          combobox\n          optionLabelProp=\"children\"\n          onChange={this.updateOptions}\n        >\n          {this.state.options.map((opt) => {\n            return <Option key={opt}>{opt}</Option>;\n          })}\n        </Select>\n        <hr/>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Test />, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/update-option.js"],"sourceRoot":""}